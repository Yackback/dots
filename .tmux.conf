#################################################
#	            Tmux.conf 			#
#		  Kelvin Porter			#
#################################################

# based off of https://github.com/tony/tmux-config
# but with edits

# reloading
bind r source-file ~/.tmux.conf

# set window split
unbind '"'
unbind %
bind-key - split-window
bind-key | split-window -h

# default window title colors
set-window-option -g window-status-style fg=colour244,bg=default,dim # fg=base0

# active window title colors
set-window-option -g window-status-current-style fg=colour166,bg=default,bright # fg=orange

# pane border
set-option -g pane-border-style fg=colour235 #fg=base02
set-option -g pane-active-border-style fg=colour240 #fg=base01

# message text
set-option -g message-style bg=colour235,fg=colour166 # bg=base02, fg=orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour green #green

# Status bar configuration - credits to huyvohcmc on github
set-option -g status-position top
set-option -g status-justify left
set-option -g status-style bg=default,fg=colour252
set-option -g window-status-format " #[fg=colour244]#I:#W "
set-option -g window-status-current-format "#[bg=colour0,fg=colour15,bold] #I:#W "
set-option -g status-right-length 200
set -g status-left "[#S] "
set -g status-right ""

# C-a is better than C-b
set-option -g prefix C-a
bind-key C-a last-window

# Start numbering at 1
set-window-option -g pane-base-index 1
set -g base-index 1

# Allows for faster key repetition while still being able to repeat
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# HJKL and ctrl hjkl pane resize
bind H resize-pane -L 2
bind J resize-pane -D 2
bind K resize-pane -U 2
bind L resize-pane -R 2
bind C-J resize-pane -D 10
bind C-K resize-pane -U 10
bind C-L resize-pane -R 10

# pane swap
bind < swap-pane -U
bind > swap-pane -D

# set to main-horizontal, 66% height for main pane
bind m run-shell "~/.tmux/scripts/resize-adaptable.sh -l main-horizontal -p 66"
# Same thing for verical layouts
bind M run-shell "~/.tmux/scripts/resize-adaptable.sh -l main-vertical -p 50"

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# fix pane_current_path on new window and splits
if-shell "test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)'" 'unbind c; bind c new-window -c "#{pane_current_path}"'
if-shell "test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)'" "unbind '\"'; bind '\"' split-window -v -c '#{pane_current_path}'"
if-shell "test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)'" 'unbind v; bind v split-window -h -c "#{pane_current_path}"'
if-shell "test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)'" 'unbind %; bind % split-window -h -c "#{pane_current_path}"'

# Longer history
set -g history-limit 100000

set-option -ga terminal-overrides ",xst-256color:Tc"
set -g default-terminal "tmux-256color"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Run tpm
run -b '~/.tmux/plugins/tpm/tpm'
